{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","app/assets/scripts/app.js","app/assets/scripts/modules/imagemask.js","node_modules/blueimp-canvas-to-blob/js/canvas-to-blob.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_modulesImagemask","_modulesImagemask2","maskImage","document","getElementById","img","remove","body","appendChild","mask","./modules/imagemask","2","Object","defineProperty","value","sourceImage","arguments","undefined","Image","pixels","canvas","createElement","ctx","getContext","width","height","drawImage","fillStyle","points","globalCompositeOperation","beginPath","moveTo","this","bezierCurveTo","quadraticCurveTo","lineTo","closePath","fill","getImg","_this","cb","toBlob","blob","src","URL","createObjectURL","blueimp-canvas-to-blob","3","window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","slice","decodeURIComponent","charCodeAt","type","append","getBlob","mozGetAsFile","callback","quality","toDataURL","define","amd"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _modulesImagemask = require('./modules/imagemask');\n\nvar _modulesImagemask2 = _interopRequireDefault(_modulesImagemask);\n\nvar maskImage = new _modulesImagemask2['default'](document.getElementById('img'));\nimg.remove();\n// document.body.appendChild(maskImage.mask([\n//     [.2, .5],\n//     [.43, .5],\n//     [.5, .3],\n//     [.57, .5],\n//     [.8, .5],\n//     [.6, .6],\n//     [.7, .8],\n//     [.5, .68],\n//     [.3, .8],\n//     [.4, .6]\n// ]));\n\ndocument.body.appendChild(maskImage);\n\nmaskImage.mask([[0, .95], [.8, .95, 1, .7], [1, 1], [0, 1]]);\n\n},{\"./modules/imagemask\":2}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nrequire('blueimp-canvas-to-blob');\n\nexports['default'] = function () {\n    var sourceImage = arguments.length <= 0 || arguments[0] === undefined ? new Image() : arguments[0];\n    var pixels = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d');\n\n    canvas.width = sourceImage.width;\n    canvas.height = sourceImage.height;\n    ctx.drawImage(sourceImage, 0, 0);\n    ctx.fillStyle = '#000';\n\n    canvas.mask = function () {\n        var points = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.drawImage(sourceImage, 0, 0);\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.beginPath();\n        ctx.moveTo(pixels ? points[0][0] : points[0][0] * this.width, pixels ? points[0][1] : points[0][1] * this.height);\n\n        for (var i = 1; i < points.length; i++) {\n            if (points[i].length === 6) {\n                ctx.bezierCurveTo(pixels ? points[i][0] : points[i][0] * this.width, pixels ? points[i][1] : points[i][1] * this.height, pixels ? points[i][2] : points[i][2] * this.width, pixels ? points[i][3] : points[i][3] * this.height, pixels ? points[i][4] : points[i][2] * this.width, pixels ? points[i][5] : points[i][3] * this.height);\n            } else if (points[i].length === 4) {\n                ctx.quadraticCurveTo(pixels ? points[i][0] : points[i][0] * this.width, pixels ? points[i][1] : points[i][1] * this.height, pixels ? points[i][2] : points[i][2] * this.width, pixels ? points[i][3] : points[i][3] * this.height);\n            } else {\n                ctx.lineTo(pixels ? points[i][0] : points[i][0] * this.width, pixels ? points[i][1] : points[i][1] * this.height);\n            }\n        }\n\n        ctx.closePath();\n        ctx.fill();\n\n        return this;\n    };\n\n    canvas.getImg = function () {\n        var _this = this;\n\n        var cb = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\n        canvas.toBlob(function (blob) {\n            var img = new Image();\n            img.src = URL.createObjectURL(blob);\n            cb.call(_this, img);\n        });\n    };\n\n    return canvas;\n};\n\nmodule.exports = exports['default'];\n\n},{\"blueimp-canvas-to-blob\":3}],3:[function(require,module,exports){\n/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/*global window, atob, Blob, ArrayBuffer, Uint8Array, define, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype = window.HTMLCanvasElement &&\n                          window.HTMLCanvasElement.prototype\n  var hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob())\n    } catch (e) {\n      return false\n    }\n  }())\n  var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    }())\n  var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n                      window.MozBlobBuilder || window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n    window.ArrayBuffer && window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mediaType}\n        )\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n          callback(dataURLtoBlob(this.toDataURL(type, quality)))\n        } else {\n          callback(this.mozGetAsFile('blob', type))\n        }\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)))\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n}(window))\n\n},{}]},{},[1])\n\n","import ImageMask from './modules/imagemask';\n\nlet maskImage = new ImageMask(document.getElementById('img'));\nimg.remove();\n// document.body.appendChild(maskImage.mask([\n//     [.2, .5],\n//     [.43, .5],\n//     [.5, .3],\n//     [.57, .5],\n//     [.8, .5],\n//     [.6, .6],\n//     [.7, .8],\n//     [.5, .68],\n//     [.3, .8],\n//     [.4, .6]\n// ]));\n\ndocument.body.appendChild(maskImage);\n\nmaskImage.mask([\n    [0, .95],\n    [.8, .95, 1, .7],\n    [1, 1],\n    [0, 1],\n])\n","import 'blueimp-canvas-to-blob';\n\nexport default (sourceImage = new Image(), pixels = false) => {\n    let canvas = document.createElement('canvas'),\n        ctx    = canvas.getContext('2d');\n\n    canvas.width = sourceImage.width;\n    canvas.height = sourceImage.height;\n    ctx.drawImage(sourceImage, 0, 0);\n    ctx.fillStyle = '#000';\n\n    canvas.mask = function(points = []) {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.drawImage(sourceImage, 0, 0);\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.beginPath();\n        ctx.moveTo(\n            pixels ? points[0][0] : points[0][0] * this.width,\n            pixels ? points[0][1] : points[0][1] * this.height\n        );\n\n        for (let i = 1; i < points.length; i++) {\n            if (points[i].length === 6) {\n                ctx.bezierCurveTo(\n                    pixels ? points[i][0] : points[i][0] * this.width,\n                    pixels ? points[i][1] : points[i][1] * this.height,\n                    pixels ? points[i][2] : points[i][2] * this.width,\n                    pixels ? points[i][3] : points[i][3] * this.height,\n                    pixels ? points[i][4] : points[i][2] * this.width,\n                    pixels ? points[i][5] : points[i][3] * this.height\n                )\n            } else if (points[i].length === 4) {\n                ctx.quadraticCurveTo(\n                    pixels ? points[i][0] : points[i][0] * this.width,\n                    pixels ? points[i][1] : points[i][1] * this.height,\n                    pixels ? points[i][2] : points[i][2] * this.width,\n                    pixels ? points[i][3] : points[i][3] * this.height\n                );\n            } else {\n                ctx.lineTo(\n                    pixels ? points[i][0] : points[i][0] * this.width,\n                    pixels ? points[i][1] : points[i][1] * this.height\n                );\n            }\n        }\n\n        ctx.closePath();\n        ctx.fill();\n\n        return this;\n    }\n\n    canvas.getImg = function(cb = () => {}) {\n        canvas.toBlob((blob) => {\n            let img = new Image();\n            img.src = URL.createObjectURL(blob);\n            cb.call(this, img);\n        });\n    }\n\n    return canvas;\n}","/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/*global window, atob, Blob, ArrayBuffer, Uint8Array, define, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype = window.HTMLCanvasElement &&\n                          window.HTMLCanvasElement.prototype\n  var hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob())\n    } catch (e) {\n      return false\n    }\n  }())\n  var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    }())\n  var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n                      window.MozBlobBuilder || window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n    window.ArrayBuffer && window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mediaType}\n        )\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n          callback(dataURLtoBlob(this.toDataURL(type, quality)))\n        } else {\n          callback(this.mozGetAsFile('blob', type))\n        }\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)))\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n}(window))\n"],"sourceRoot":"/source/"}